services:
  graphiti_mcp_ollama:
    image: ollama/ollama:latest
    container_name: graphiti_mcp_ollama
    ports:
      - "${OLLAMA_PORT:-11435}:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0:11434
      - OLLAMA_ORIGINS=*
    restart: unless-stopped

  ollama-pull:
    image: ollama/ollama:latest
    container_name: ollama-pull
    depends_on:
      - graphiti_mcp_ollama
    entrypoint: ["sh", "-c"]
    command: >
      sleep 5 &&
      echo "⏳ Pulling deepseek-r1:8b…" &&
      ollama pull deepseek-r1:8b &&
      echo "✅ Model downloaded"
    restart: "no"

  neo4j:
    image: neo4j:5.26.0
    container_name: neo4j
    ports:
      - "${NEO4J_HTTP_PORT:-7476}:7474"
      - "${NEO4J_BOLT_PORT:-7688}:7687"
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${NEO4J_HTTP_PORT:-7476} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  graphiti-mcp:
    build:
      context: .
    container_name: graphiti-mcp
    image: graphiti-mcp:latest
    env_file: .env
    depends_on:
      neo4j:
        condition: service_started
    ports:
      - "${MCP_PORT:-8001}:8000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]
    restart: unless-stopped

volumes:
  ollama_data:
  neo4j_data:
  neo4j_logs:
